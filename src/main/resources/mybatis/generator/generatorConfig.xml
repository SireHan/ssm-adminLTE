<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!-- 数据库驱动-->
    <classPathEntry location="mysql-connector-java-6.06.jar" />

    <context id="admin" targetRuntime="MyBatis3">
        <!-- 注释生成器的属性,不写默认false -->
        <commentGenerator>
            <!-- 用来指定生成的注释中是否包含生成的日期 true:是;false:否 -->
            <property name="suppressDate" value="true"/>
            <!-- 代码中是否包含任何注释 -->
            <!-- 是否去除自动生成的注释 true:是;false:否 -->
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <!-- 指定数据库连接所需的属性。 -->
        <!-- driverClass  : 用于访问数据库的JDBC驱动程序名称 -->
        <!-- connectionURL: 用于访问数据库的JDBC连接URL -->
        <!-- userId       : 访问数据库的用户ID -->
        <!-- password     : 访问数据库的用户密码 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://192.168.100.12/admin"
                        userId="root"
                        password="MyNewPass4!">
        </jdbcConnection>

        <!-- java类型处理器 -->
        <javaTypeResolver>
            <!-- true : 使用BigDecimal对应DECIMAL和 NUMERIC数据类型 -->
            <!-- false: 默认, -->
            <!--        scale>0;length>18：使用BigDecimal; -->
            <!--        scale=0;length[10,18]：使用Long; -->
            <!--        scale=0;length[5,9]：使用Integer; -->
            <!--        scale=0;length<5：使用Short; -->
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>

        <!-- 生成模型的包名和位置-->
        <javaModelGenerator targetPackage="com.informationstorm.admin.model" targetProject="src">
            <property name="enableSubPackages" value="true" />
            <property name="trimStrings" value="true" />
        </javaModelGenerator>

        <!-- 生成MyBatis/iBATIS形式的XML映射文件的包名和位置-->
        <sqlMapGenerator targetPackage="com.informationstorm.admin.mapping"  targetProject="src">
            <property name="enableSubPackages" value="true" />
        </sqlMapGenerator>

        <!-- 生成DAO的包名和位置-->
        <!-- 对于mybatis来说，即生成Mapper接口，注意，如果没有配置该元素，那么默认不会生成Mapper接口
        targetPackage/targetProject:同javaModelGenerator
        type: 选择怎么生成mapper接口（在MyBatis3/MyBatis3Simple下）：
            1，ANNOTATEDMAPPER：会生成使用Mapper接口+Annotation的方式创建（SQL生成在annotation中），不会生成对应的XML；
            2，MIXEDMAPPER：使用混合配置，会生成Mapper接口，并适当添加合适的Annotation，但是XML会生成在XML中；
            3，XMLMAPPER：会生成Mapper接口，接口完全依赖XML；
        注意，如果context是MyBatis3Simple:只支持ANNOTATEDMAPPER和XMLMAPPER
        -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.informationstorm.admin.dao"  targetProject="src">
            <!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false -->
            <property name="enableSubPackages" value="true" />
        </javaClientGenerator>

        <!-- 要生成的表 tableName是数据库中的表名或视图名 domainObjectName是实体类名-->
        <table tableName="front_user"
               domainObjectName="FrontUser"
               enableCountByExample="false"
               enableInsert="true"
               enableDeleteByPrimaryKey="true"
               enableDeleteByExample="false"
               enableUpdateByPrimaryKey="true"
               enableUpdateByExample="false"
               enableSelectByPrimaryKey="true"
               enableSelectByExample="false"
               selectByPrimaryKeyQueryId="true"
               selectByExampleQueryId="false"/>

    </context>
</generatorConfiguration>
